Scala基于jvm  #API=java(scala对java进行包装)+scala特有
.class 与 .scala都可以直接运行   #.scala运行更慢(编译和运行都有)




现代编译器：
    堆：当一个对象的声明周期很长，可能会被多个变量引用[不同的栈引用同一个空间]
    栈：数据空间只是临时用一下

var与val:
    1 实际工作中，更多的需求是获取/创建一个对象后，读取该对象的属性，或者修改该对象的属性值(var)，单很少改变这个对象本身(val)
    2 val没有线程安全的问题，因此效率高，scala设计者推荐使用val[源码+final]
    3 如果对象需要改变，使用var


数据类型[没有原声类型，所有的数据类型都是对象]
    2大类:AnyVal(值类型)/AnyRef(引用类型)  #都是对象

类型转换：低精度的值向高精度的值自动转换[隐式转换]
Unit 相当于void  值为()
Null 相当于null引用 null只能赋值给AnyRef 不能赋值给AnyVal
Nothing 最底层可以作为任何类型的子类型-[常用来处理异常]